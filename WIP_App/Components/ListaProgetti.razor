@using System.IO

<div>
    <div style="float:left" width=100px>
        <h5>Progetti</h5>
    </div>
    <div style="float:right">
            <label for="ricerca">Ricerca:</label>
            <input type="search" id="ricerca" name="ricerca" 
                   placeholder="nome progetto..." 
                   @bind-value="TestoRicerca">
            @*<p>@TestoRicerca</p>*@
        

    </div>
</div>



<table id="TabElementiProgetto" class="table table-striped table-active">
    <thead class="table-primary">
        <tr>

            <th><font size=2>Progetto</font></th>
            <th><font size=2>Cliente</font></th>
            <th style="min-width:140px"><font size=2>Descrizione</font></th>
            <th><font size=2>Data inizio</font></th>
            <th><font size=2>Scadenza</font></th>
            <th>
                <font size=2>
                    Dettagli
                </font>
            </th>
            <th><font size=2>Pagato</font></th>
            <th @onclick="e => OnAlternaArchiviato()" 
                style = "cursor: pointer">
                    <font size=2>Archiviato</font>
            </th>

            <th>
                <button class="btn btn-sm btn-primary "
                        @onclick="OnCreaProgetto">
                    <font size=2>Nuovo</font>
                </button>
            </th>

        </tr>
    </thead>
    @foreach (var progetto in ListaElementiProgetto)
    {
        @if (!alternaArchiviato)
        {
            @if (!progetto.Archiviato && 
                   (progetto.NomeProgetto.Contains(TestoRicerca) || 
                    progetto.Cliente.Contains(TestoRicerca) || 
                    progetto.Descrizione.Contains(TestoRicerca)
                    )
                )
            {
                <tr>
                    <td><font size=2>@progetto.NomeProgetto</font></td>
                    <td><font size=2>@progetto.Cliente</font></td>
                    <td><font size=2>@progetto.Descrizione</font></td>
                    <td><font size=2>@progetto.DataInizio</font></td>
                    <td><font size=2>@progetto.DataScadenza</font></td>
                    <td align="center">
                            <span @onclick="e => OnModificaProgetto.InvokeAsync(progetto)" 
                                  style = "cursor: pointer; color: dodgerblue" 
                                  class="oi oi-magnifying-glass" aria-hihhen="true" 
                                  cursor title="Dettaglio e modifica"></span>
                    </td>

                    <td align="center" >
                        @if (progetto.Pagato)
                        {
                            <span @onclick="e => OnPagato(progetto)" 
                                  style="cursor: pointer; color: green" 
                                  class="oi oi-check" aria-hihhen="true" 
                                  title="si"></span>
                        }
                        else
                        {
                            <span @onclick="e => OnPagato(progetto)" 
                                  style="cursor: pointer; color: red; font-size:small " 
                                  class="oi oi-x" aria-hihhen="true"
                                  title="no"></span>
                        }
                    </td>

                    <td align="center" @onclick="e => OnArchiviato(progetto)"> 
                            @if (progetto.Archiviato)
                            {
                                <span @onclick="e => OnArchiviato(progetto)" 
                                      style="cursor: pointer; color: green" 
                                      class="oi oi-check" aria-hihhen="true" 
                                      title="si"></span>
                            }
                            else
                            {
                                <span @onclick="e => OnArchiviato(progetto)" 
                                      style="cursor: pointer; color: red; font-size:small" 
                                      class="oi oi-x" aria-hihhen="true" 
                                      title="no"></span>
                            }
                    </td>

                    <th>

                        <button class="btn btn-sm btn-outline-danger"  
                                title="Attenzione! Eliminazione Permanente."
                                @onclick="e => OnEliminaProgetto.InvokeAsync(progetto)">
                            <font size=2> Elimina</font>
                        </button>


                    </th>


                </tr>
            }
        }
        else{
            if (progetto.Archiviato &&
                    (progetto.NomeProgetto.Contains(TestoRicerca) ||
                    progetto.Cliente.Contains(TestoRicerca) ||
                    progetto.Descrizione.Contains(TestoRicerca))
                )
            {
                <tr>
                    <td><font size=2>@progetto.NomeProgetto</font></td>
                    <td><font size=2>@progetto.Cliente</font></td>
                    <td><font size=2>@progetto.Descrizione</font></td>
                    <td><font size=2>@progetto.DataInizio</font></td>
                    <td><font size=2>@progetto.DataScadenza</font></td>

                    <td align="center">
                            <span style="cursor: pointer; color: dodgerblue" 
                                  class="oi oi-magnifying-glass" aria-hihhen="true" 
                                  cursor title="Dettaglio e modifica" 
                                  @onclick="e => OnModificaProgetto.InvokeAsync(progetto)">
                            </span>
                    </td>

                    <td align="center">
                            @if (progetto.Pagato)
                            {
                                <span @onclick="e => OnPagato(progetto)" 
                                      style="cursor: pointer; color: green" 
                                      class="oi oi-check" aria-hihhen="true" 
                                      title="si"></span>
                            }
                            else
                            {
                                <span @onclick="e => OnPagato(progetto)" 
                                      style="cursor: pointer; color: red; font-size:small" 
                                      class="oi oi-x" aria-hihhen="true" 
                                      title="no"></span>
                            }
                    </td>

                    <td align="center" @onclick="e => OnArchiviato(progetto)">
                            @if (progetto.Archiviato)
                            {
                                <span @onclick="e => OnArchiviato(progetto)" 
                                      style="cursor: pointer; color: green" 
                                      class="oi oi-check" aria-hihhen="true" 
                                      title="si"></span>
                            }
                            else
                            {
                                <span @onclick="e => OnArchiviato(progetto)" 
                                      style="cursor: pointer; color: red; font-size:small" 
                                      class="oi oi-x" aria-hihhen="true" 
                                      title="no"></span>
                            }
                    </td>

                    <th>
                        <button class="btn btn-sm btn-outline-danger" 
                                title="Attenzione Eliminazione Permanente!"
                                @onclick="e => OnEliminaProgetto.InvokeAsync(progetto)">
                            Elimina
                        </button>
                    </th>


                </tr>
            }
        }
    }

</table>




@code {

    public string TestoRicerca = "";
    [Parameter]
    public string Titolo { get; set; }
    [Parameter]
    public string title { get; set; }
    [Parameter]
    public string Pagato { get; set; }
    [Parameter]
    public string Archiviato { get; set; }



    [Parameter]
    public List<ElementoListaProgetti> ListaElementiProgetto { get; set; }

    [Parameter]
    public EventCallback OnCreaProgetto { get; set; }

    [Parameter]
    public EventCallback<ElementoListaProgetti> OnModificaProgetto { get; set; }

    [Parameter]
    public EventCallback<ElementoListaProgetti> OnEliminaProgetto { get; set; }

    [Parameter]
    public Prospetto DettaglioProgetto { get; set; }

    //Ricerca progetti
    [Parameter]
    public string NomeProgetto { get; set; }

    [Parameter]
    public string ricerca { get; set; }

    [Parameter]
    public EventCallback OnRicercaProgetto { get; set; }

    //Alternanza programmi attivi e archiviati
    [Parameter]
    public Boolean alternaArchiviato { get; set; }



    public void OnPagato(ElementoListaProgetti cliccato)
    {
        cliccato.Pagato = !cliccato.Pagato;
        //File.WriteAllText("archivio.json", JsonConvert.SerializeObject(this.lista));
    }

    public void OnArchiviato(ElementoListaProgetti cliccato)
    {
        cliccato.Archiviato = !cliccato.Archiviato;
        //File.WriteAllText("archivio.json", JsonConvert.SerializeObject(this.lista));
    }

    public void OnAlternaArchiviato()
    {
        alternaArchiviato = !alternaArchiviato;

    }




























































    }
